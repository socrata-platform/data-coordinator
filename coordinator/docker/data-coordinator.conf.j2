com.socrata.coordinator.service {
  curator.ensemble = {{ ZOOKEEPER_ENSEMBLE }}
  service-advertisement.address = "{{ ARK_HOST }}"
  network.port = 6020
  liveness-check.port = 6021

  instance = "{{ DATA_COORDINATOR_INSTANCE }}"

  database {
    host = "{{ DATA_COORDINATOR_DB_HOST }}"
    port = "{{ DATA_COORDINATOR_DB_PORT }}"
    database = "{{ DATA_COORDINATOR_DB_NAME }}"
    username = "{{ DATA_COORDINATOR_DB_USER }}"
    {{ DATA_COORDINATOR_DB_PASSWORD_LINE }}
  }

  collocation {
    cost {
      moves-weight = {{ DATA_COORDINATOR_COLLOCATION_COST_MOVES_WEIGHT }}
      total-size-bytes-weight = {{ DATA_COORDINATOR_COLLOCATION_COST_TOTAL_SIZE_BYTES_WEIGHT }}
      move-size-max-bytes-weight = {{ DATA_COORDINATOR_COLLOCATION_COST_MOVE_SIZE_MAX_BYTES_WEIGHT }}
    }

    group = {{ DATA_COORDINATOR_COLLOCATION_GROUP }}
  }

  secondary {
    {{ SECONDARY_CONFIG }}

    instances {
      # this section is just so the config parsing doesn't blow up
    }
  }

  metrics {
    enable-graphite = {{ ENABLE_GRAPHITE }}
    graphite-host = "{{ GRAPHITE_HOST }}"
    graphite-port = "{{ GRAPHITE_PORT }}"
    log-metrics = {{ LOG_METRICS }}
  }

  tablespace = """(format "ts%05d" (rand-int 1000))"""

  jetty-threadpool {
    min-threads = 10
    max-threads = 100
    idle-timeout = 5 minutes
    queue-length = 5000
  }
}
